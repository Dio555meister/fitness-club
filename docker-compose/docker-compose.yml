version: '3'
services:
  postgres:
    image: postgres:16
    container_name: fitness-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
    ports:
      - "5432:5432"

  kafka:
    image: bitnami/kafka:3.9
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_PROCESS_ROLES: "controller,broker"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@broker:29093"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://broker:29092,CONTROLLER://broker:29093,EXTERNAL://0.0.0.0:9092"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://broker:29092,EXTERNAL://localhost:9092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      # Добавлено для создания топика при старте
    command: >
      bash -c "
      /opt/bitnami/scripts/kafka/run.sh &
      sleep 10;
      /opt/bitnami/kafka/bin/kafka-topics.sh --create --bootstrap-server broker:29092 --topic orders --partitions 1 --replication-factor 1;
      /opt/bitnami/kafka/bin/kafka-topics.sh --create --bootstrap-server broker:29092 --topic payments --partitions 1 --replication-factor 1;
      wait;
      "

  kafbat-ui:
    container_name: kafbat-ui
    image: ghcr.io/kafbat/kafka-ui:latest
    ports:
      - "7777:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=broker:29092